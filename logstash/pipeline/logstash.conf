input {
	beats {
		port => 5044
	}

	tcp {
		port => 5000
		codec => json
	}

	rabbitmq {
        host => ${RMQ_HOST}
        user => ${RMQ_USER}
        password => ${RMQ_PASSWORD}
        exchange => "logs"
        exchange_type => "fanout"
        queue => "logstash"
        durable => true
        metadata_enabled => "extended"
	}
}

## Add your filters / logstash plugins configuration here

filter {
   if [type] == "nginx" {
     grok {
        match => { "message" => "%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:access_time}\] \"%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:body_sent_bytes} \"%{DATA:referrer}\" \"%{DATA:agent}\"" }
      }
      date {
        match => [ "access_time" , "dd/MMM/YYYY:HH:mm:ss Z" ]
        target => [ "@timestamp" ]
      }
   }
   else if [type] == "django" {
     json {
        source => "message"
        target => "doc"
     }
   }
}

output {
    stdout { codec => rubydebug }
    if [type] == "nginx" {
        elasticsearch {
            user => ${LOGSTASH_LOGS_USER}
            password => ${LOGSTASH_LOGS_PASSWORD}
            hosts     => "elasticsearch:9200"
            index    => "nginx-%{+YYYY.MM.dd}"
        }
    }
    else if [type] == "django" {
        elasticsearch {
            user => ${LOGSTASH_LOGS_USER}
            password => ${LOGSTASH_LOGS_PASSWORD}
            hosts     => "elasticsearch:9200"
            index    => "django-%{+YYYY.MM.dd}"
        }
    }
    else {
        elasticsearch {
            user => ${LOGSTASH_LOGS_USER}
            password => ${LOGSTASH_LOGS_PASSWORD}
            hosts     => "elasticsearch:9200"
            index    => "messages-%{+YYYY.MM.dd}"
        }
    }
}
